#변수 선언
# 1. 변수이름=값
# 2. 변수이름1,변수이름2,변수이름3=값1,값2,값3
# 3. 변수이름1=변수이름2=값1
#input() 함수 : 문자열을 입력받는 함수로 반환값은 str(문자열)*
#print(type(input()))

#print(input('입력 : '))

##정리, 인지(prompt)에 입력받기 위한 설명을 사용할 수 있다.
#input()는 문자열로 입력을 받기 때문에 숫자로 사용하기 위해서는
#필요한 형태로 형변환을 반드시 해야한다.

#연습...input()를 사용하여 별도의 나이와 이름을 입력받아 다음과 같이 
#출력되게 코드를 만들어주세요(format사용)
# ex) =>'홍길동' 님의 나이는 100세입니다.
'''
name=input("이름을 입력하세요: ")
age=int(input("나이를 입력하세요: "))
print('{}님의 나이는 {}세 입니다.'.format(name,age))
'''
#괄호안에 :없이 숫자만 넣으면 format(,) 할때 순서 변경가능
#print(f'{name}님의 나이는 {age}세 입니다.') # 맨 앞에 f넣고 {}에 변수명 넣으면 출력


##연산자

# (1) 산술 연산자 : 산술 연산을 위해서 사용하는 연산자
# '+(더하기)','-(빼기)','*(곱하기)'.'/(나누기)','//(정수나누기)','%(나머지연산)','**(제곱)'
n1=3
n2=2
print(n1+n2)
print(n1-n2)
print(n1*n2)
print(n1/n2)  # 결과 실수값 (float)
print(n1//n2) # 결과 정수값 나누기 몫
print(n1%n2)
print(n1**n2)

# (2) 비교(관계) 연산자
# : 두 항의 값을 비교(관계)하여 관계를 설명하는 연산자 -> Bool로 True or False
# 값의 기준은 좌항을 기준으로 삼는다.
# "==" : 두항의 값이 같다.
# "!=" : 두 항의 값이 같지 않다.
# ">" "<" ">=" "<="
# 위의 관계가 맞으면 True, 틀리면 False 반환
# (3) 논리 연산자 : 두 항의 값이 참인지 거짓인지 확인하여 판별하는 연산자 -> bool
# "and(논리곱)" : 두항의 값이 모두 True인 경우에만 True반환
# "or(논리합)"  : 두항 중 하나라도 True인 경우에 True 반환
# "not(부정)"   : True 이면 False를 False이면 True를 반환
# (4) 멤버 연산자
# 왼쪽 피 연산자의 값이 오른쪽 연산자 멤버 중 일치 여부를 확인하는 연산자.
# in    : 왼쪽 피 연산자의 값이 오른쪽 피 연산자에 존재하는 경우 True
# not in : 왼쪽 피 연산자의 값이 오른쪽 피 연산자에 존재하지 않는 경우 True
print(1 in (1,2,3))     #True
print(1 not in (1,2,3)) #False
# (5) 식별 연산자
# 식별값 비교 연산하여 처리하는 연산자.
# is        : 두 피연산자의 식별값(객체타입)을 비교하여 동일 객체라면 True
# not is    : 두 피연산자의 식별값을 비교하여 동일하지 않은 객체라면 True
num1,num2=1,'1'
print(type(num1) is int)        #True
print(type(num2) is not int)    #True
print(type(num1) is not str)    #True
print(type(num2) is str)        #True
# (6) 비트 연산자
# 비트값을 연산처리하는 연산자들...
# &     : 두 비트 and 연산 처리하는 연산자(논리곱)
# |     : 두 비트 or 연산 처리하는 연산자(논리합)
# ^     : 두 비트 xor 연산 처리하는 연산자(배타적 논리합)
# <<    : 왼쪽 피 연산자의 비트를 왼쪽으로 오른쪽 숫자만큼 이동
# >>    : 왼쪽 피 연산자의 비트를 오른쪽으로 오른쪽 숫자만큼 이동.

# & : AND 비트 연산
#       00001010(10)
#       00001111(15)
#       ============
#       00001000(8)

print(10&13)

#  | : or 비트 연산
#         00001010(10)
#         00001101(13)
#         ===========
#         00001111(15)
print(10|13)

# ^ :XOR 비트 연산 - 암호문 처리할 경우에 많이 사용
# 두 비교 비트가 동일하면 0를 반환하고, 둘중 하나라도 1이라면 1
#       00001010(10) -원본
#       00001101(13) -키
#       ============
#       00000111(7) -암호
#       00001101(13) -키
#       ===========
#       00001010(10) -원본
print(10^13)
print(7^13)

# << : 왼쪽 shift연산자
#       00001010(10)
#   <<          3
#       ===========
#       01010000 (80)
# 
# 특징 : 2 제곱으로 곱하는 정수 곱하기
# #
print(10<<3)
# >> : 왼쪽 shift연산자
#       00001010(10)
#   >>          3
#       ===========
#       00000001 (1)
# 특징 :2제곱승으로 나누는 정수 나누기
# #
print(10>>3)

'''
문제 1. num1, num2, num3=5,15,27
위 변수에 할당된 값을 사용하여 다음 결과가 나오도록 
산술 연산자 사용
ㄱ. -12
ㄴ.75
ㄷ.25
ㄹ.5.4
ㅁ.3.0
'''
#ㄱ.-12
print(num1-num2)
#ㄴ.75
print(num1*num2)
#ㄷ.25

'''
문제2. 다음의 연산자를 보고 True와 False를 구분하시오.
ㄱ.7>18
ㄴ.5<2
ㄷ.6%3>2
ㄹ.5+5!=2*5
ㅁ.True==1
ㅂ.1=='1'
ㅅ.10//3=10%3
ㅇ.15%4 in (0,1,2)
'''

'''
문제3. input()으로 2개의 값을 받은 다음 더하기, 빼기
곱하기 나누기 연산을 하여 그 결과를 출력 코드 작성
'''

'''
문제4. 사용자로부터 이름, 키, 체중 값을 입력받아 비만도 출력
비만도 계산식 : 비만도 =현재체중/표준체중*100
표준 체중 계산식 : 표준체중 =(현재키-100)*0.9
출력 : 홍길동님의 비만도는 112.15%입니다.
'''
name=input("이름 입력 : ")
h=float(input("키 입력 : "))
w=float(input("몸무게 입력(kg) : "))
std=(h-100)*0.9
fat=w/std*100

print("{}님의 비만도는 {:2f}% 입니다.".format(name,fat))
